{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["defaultItem","text","isCompleted","Todo","todo","index","completeTodo","removeTodo","undoTodo","className","style","textDecoration","backgroundColor","onClick","title","TodoForm","addTodo","React","useState","value","setValue","handleSubmit","e","preventDefault","trim","length","onSubmit","type","onChange","target","placeholder","autoFocus","App","todos","setTodos","JSON","parse","localStorage","getItem","console","log","newTodos","setItem","stringify","allTasksCompleted","splice","filter","item","hasOwnProperty","alert","launchConfetti","end","Date","now","frame","confetti","particleCount","startVelocity","angle","spread","origin","x","y","requestAnimationFrame","map","totalItems","totalCompletedItems","totalIncompleteItems","displayStatistics","clear","pop","clearAllTodo","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35dd27f5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport confetti from 'canvas-confetti';\n\nconst defaultItem = [{ text: \"Add some items to list\", isCompleted: false }];\n\nfunction Todo({ todo, index, completeTodo, removeTodo, undoTodo }) {\n  return (\n    <div \n      className=\"todo\"\n      style={{ \n        textDecoration: todo.isCompleted ? \"line-through\" : \"\", \n        backgroundColor: todo.isCompleted ? \"darkgray\": \"\"\n      }}\n    >\n      <div className=\"todo-text\">\n        {todo.text}\n      </div>\n      <div className=\"btn-div\">\n        { todo.isCompleted ?\n            <span className=\"btn-undo-todo material-icons md-24\" onClick={() => undoTodo(index)} title=\"Undo Complete\">undo</span>\n          : <span className=\"btn-complete-todo material-icons md-24\" onClick={() => completeTodo(index)} title=\"Complete Item\">check_circle</span>\n        }\n        <span className=\"material-icons md-24 btn-remove-todo\" onClick={() => removeTodo(index)} title=\"Remove Item\">delete</span>\n      </div>\n    </div>\n  );\n};\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // prevent adding blank values\n    if (!value || !value.trim() || !value.length === 0) {\n      setValue(\"\");\n      return;\n    }\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        placeholder=\"Enter your to-do item\"\n        title=\"Enter your to-do item\"\n        autoFocus\n      />\n      <button className=\"btn-placeholder\"><span className=\"material-icons md-30 btn-add-todo\" onSubmit={handleSubmit} title=\"Add Item\">add_circle</span></button>\n    </form>\n  );\n}\n\nfunction App() {\n  var todos, setTodos;\n  // const [todos, setTodos] = React.useState([\n  //   { text: \"Learn about React\", isCompleted: false },\n  //   { text: \"Add some items to list\", isCompleted: false },\n  //   { text: \"Build really cool todo app\", isCompleted: false }\n  // ]);\n  [todos,setTodos] = React.useState(JSON.parse(localStorage.getItem('todos')) || defaultItem);\n  console.log('TempTodo: ',todos);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text, isCompleted: false }];\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    // let localData = JSON.parse(localStorage.getItem('todos') || \"[]\");\n    // console.log(localData);\n  }\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    allTasksCompleted(newTodos);\n  };\n\n  const undoTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = false;\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    if(newTodos.length === 0) {\n        setTodos(defaultItem)\n        localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    // allTasksCompleted(newTodos);\n  };\n\n  const displayStatistics = () => {\n    const totalItems = todos.length;\n    const totalCompletedItems = todos.filter(item => item.isCompleted === true).length;\n    const totalIncompleteItems = todos.filter(item => item.isCompleted === false || !item.hasOwnProperty('isCompleted')).length;\n    \n    alert('*** Statistics ***\\n\\n'\n      + 'Items to-do: ' + totalItems \n      + '\\nCompleted:  ' + totalCompletedItems \n      + '\\nIncomplete:  ' + totalIncompleteItems);\n  }\n\n  const clearAllTodo = () => {\n    if(localStorage.length > 0) {\n      localStorage.clear();\n      const newTodos = [...todos];\n      while(newTodos.length !== 0) {\n        newTodos.pop();\n      }\n      setTodos(newTodos);\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  }\n\n  const allTasksCompleted = (newTodos) => {\n    const totalIncompleteItems = newTodos.filter(item => item.isCompleted === false || !item.hasOwnProperty('isCompleted')).length;\n    \n    if (totalIncompleteItems === 0) {\n      alert('Woohooo!! You\\'ve completed all the tasks!');\n      launchConfetti();\n    }\n  }\n\n  const launchConfetti = () => {\n      // launch confetti for 1.5 seconds\n      var duration = 1.5 * 1000;\n      var end = Date.now() + duration;\n\n      (function frame() {\n        // launch a few confetti from the left edge\n        confetti({\n          particleCount: 10,\n          startVelocity: 80,\n          angle: 60,\n          spread: 55,\n          origin: { x: 0, y: 1 }\n        });\n        // and launch a few from the right edge\n        confetti({\n          particleCount: 10,\n          startVelocity: 80,\n          angle: 120,\n          spread: 55,\n          origin: { x: 1, y: 1 }\n        });\n\n        // keep going until we are out of time\n        if (Date.now() < end) {\n          requestAnimationFrame(frame);\n        }\n      }());\n  }\n\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"todo-title\">To-Do App</h1>\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            undoTodo={undoTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n        <div className=\"row\">\n          <div className=\"col\"><button className=\"btn-statistics\" onClick={() => displayStatistics()} title=\"Get Statistics\">Get Statistics</button></div>\n          <div className=\"col btn-clear-row\"><span className=\"material-icons md-30 btn-clear\" onClick={() => clearAllTodo()} title=\"Clear List\">delete_forever</span></div>\n        </div>\n      </div>\n    <script src=\"confetti.js\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}